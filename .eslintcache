[{"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\index.js":"1","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Icons.jsx":"2","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\helpers\\hooks\\useWindowWidth.js":"3","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\ui-elements\\Card.jsx":"4","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Header.jsx":"5","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\Container.jsx":"6","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Home.jsx":"7","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\About.jsx":"8","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Services.jsx":"9","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Contact.jsx":"10","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\App.js":"11","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Porfolio.jsx":"12","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Footer.jsx":"13","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\serviceWorker.js":"14","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\ui-elements\\PortfolioItem.jsx":"15"},{"size":532,"mtime":1606612121852,"results":"16","hashOfConfig":"17"},{"size":978,"mtime":1609785378707,"results":"18","hashOfConfig":"17"},{"size":455,"mtime":1598865502885,"results":"19","hashOfConfig":"17"},{"size":222,"mtime":1598782985764,"results":"20","hashOfConfig":"17"},{"size":4951,"mtime":1617394969614,"results":"21","hashOfConfig":"17"},{"size":2966,"mtime":1606609571162,"results":"22","hashOfConfig":"17"},{"size":4893,"mtime":1609785165077,"results":"23","hashOfConfig":"17"},{"size":3167,"mtime":1617394374699,"results":"24","hashOfConfig":"17"},{"size":4027,"mtime":1606586439871,"results":"25","hashOfConfig":"17"},{"size":1579,"mtime":1606598678482,"results":"26","hashOfConfig":"17"},{"size":132,"mtime":1586582854379,"results":"27","hashOfConfig":"17"},{"size":27345,"mtime":1606597109926,"results":"28","hashOfConfig":"17"},{"size":1506,"mtime":1606606300488,"results":"29","hashOfConfig":"17"},{"size":5086,"mtime":1586513288677,"results":"30","hashOfConfig":"17"},{"size":601,"mtime":1606590235764,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bv1ooi",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\index.js",[],["67","68"],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Icons.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\helpers\\hooks\\useWindowWidth.js",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\ui-elements\\Card.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Header.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\Container.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Home.jsx",["69","70","71"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\n\r\nimport ProfileImage from '../../images/profile_picture.jpeg';\r\n\r\nconst skills = ['SOFTWARE DEVELOPER.', 'JAVASCRIPT DEVELOPER.', 'PHP DEVELOPER.'];\r\n\r\n\r\nconst Home = props => {\r\n    const homeRef = useRef(null);\r\n\r\n    const [currentSkill, setCurrentSkill] = useState('');\r\n    const [controller, setController] = useState(false);\r\n    const [curr, setCurr] = useState(0);\r\n    const [timOut, setTimOut] = useState(false);\r\n\r\n    const [slideIn, setSLideIn] = useState(false);\r\n\r\n    // let { open } = props;\r\n\r\n    let i = 0;\r\n    let speed = 30;\r\n    let ryb = 0;\r\n\r\n    const typeWriter = useCallback(() => {\r\n        if(controller){\r\n            let txt = skills[curr];\r\n            if(ryb === 0 && timOut){\r\n                setTimeout(() => {\r\n                    if (i < txt.length) {\r\n                        ryb = 1;\r\n                        setTimOut(false);\r\n                        setCurrentSkill(prevState => prevState.slice(0, -1));\r\n                        i++;\r\n                        // ryb = false;\r\n                        setTimeout(typeWriter, speed);\r\n                    }else{\r\n                        if(skills.length > curr + 1){\r\n                            let cur = curr + 1;\r\n                            setCurr(cur);\r\n                        }else{\r\n                            setCurrentSkill('');\r\n                            setCurr(0);\r\n                        }\r\n                        setController(false);\r\n                    }\r\n                }, 2000);\r\n            }else{\r\n                if (i < txt.length) {\r\n                    setCurrentSkill(prevState => prevState.slice(0, -1));\r\n                    i++;\r\n                    \r\n                    setTimeout(typeWriter, speed);\r\n                }else{\r\n                    if(skills.length > curr + 1){\r\n                        let cur = curr + 1;\r\n                        setCurr(cur);\r\n                    }else{\r\n                        setCurrentSkill('');\r\n                        setCurr(0);\r\n                    }\r\n                    setController(false);\r\n                }\r\n            }\r\n            \r\n           \r\n        }else{\r\n            var txt = skills[curr];\r\n            if (i < txt.length) {\r\n                if(i === 0){\r\n                    setCurrentSkill(txt.charAt(0));\r\n                }else{\r\n                    setCurrentSkill(prevState => prevState+txt.charAt(i));\r\n                }\r\n                \r\n                i++;\r\n                setTimeout(typeWriter, speed);\r\n            }else{\r\n                ryb = 1;\r\n                setTimOut(true);\r\n                \r\n                setController(true);\r\n            }\r\n        }\r\n       \r\n    }, [controller, skills, curr, ryb, timOut, setTimOut, setCurrentSkill, speed, setCurr, setController]);\r\n    \r\n    useEffect(() => {\r\n        typeWriter();\r\n    }, [controller]);\r\n\r\n    useEffect(() => {\r\n        if(homeRef){\r\n            if(homeRef.current.offsetTop === 0){\r\n                setSLideIn(true);\r\n            }\r\n        }\r\n        \r\n    });\r\n\r\n    return (\r\n        <section className=\"home\" id=\"home\" ref={homeRef}>\r\n            <div className=\"home-column wrapper\">\r\n                <div className={`home-column__about${slideIn ? ' enter_from_left' : ''}`}>\r\n                    <div className=\"home-column__about-hello\">\r\n                        <div className=\"hello\">Hello!!</div>\r\n                    </div>\r\n                    <h4>Ezenwankwo Ugochukwu</h4>\r\n                    <p className=\"skill\">I'm a <span>{currentSkill}</span></p>\r\n                    <p className=\"bio\"> Problem solving, responsive designs, robust APIs and scalabale softwares, testing and maintenace of applications.</p>\r\n                    {/* <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.upwork.com/freelancers/~011c8bdfb541a568e5?viewMode=1\" className=\"btn\">GET IN TOUCH</a> */}\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto: info@devugo.com\" className=\"btn\">GET IN TOUCH</a>\r\n                </div>\r\n                <div className=\"home-column__profile\">\r\n                    <div className=\"home-column__profile-image\">\r\n                        <div className={`home-column__profile-image__one${slideIn ? ' enter_from_right_one' : ''}`}></div>\r\n                        <div className={`home-column__profile-image__two${slideIn ? ' enter_from_right_two' : ''}`}></div>\r\n                        <img src={ProfileImage} alt=\"profile\" className={`${slideIn ? ' enter_from_right_image' : ''}`} />\r\n                    </div>\r\n                </div>\r\n            </div><br />\r\n            <div className=\"home__down-arrow center-content\">\r\n                <a href=\"#about\"><i className=\"fa fa-arrow-down\"></i></a>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\About.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Services.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Contact.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\App.js",[],["72","73"],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Porfolio.jsx",["74","75"],"import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Modal, Tag } from 'antd';\r\n\r\nimport useWindowWidth from '../helpers/hooks/useWindowWidth';\r\nimport { PortfolioItem } from '../ui-elements/PortfolioItem';\r\n\r\nimport CBT1 from '../../images/cbt_images/image1.png';\r\nimport CBT2 from '../../images/cbt_images/image2.png';\r\nimport CBT3 from '../../images/cbt_images/image3.png';\r\nimport CBT4 from '../../images/cbt_images/image4.png';\r\nimport CBT5 from '../../images/cbt_images/image5.png';\r\n\r\nimport Result1 from '../../images/result_images/image1.png';\r\nimport Result2 from '../../images/result_images/image2.png';\r\nimport Result3 from '../../images/result_images/image3.png';\r\nimport Result4 from '../../images/result_images/image4.png';\r\nimport Result5 from '../../images/result_images/image5.png';\r\n\r\nimport Fee1 from '../../images/fees_images/image1.png';\r\nimport Fee2 from '../../images/fees_images/image2.png';\r\nimport Fee3 from '../../images/fees_images/image3.png';\r\nimport Fee4 from '../../images/fees_images/image4.png';\r\nimport Fee5 from '../../images/fees_images/image5.png';\r\n\r\nimport Landing1 from '../../images/landing_page_images/image1.png';\r\nimport Landing2 from '../../images/landing_page_images/image2.png';\r\nimport Landing3 from '../../images/landing_page_images/image3.png';\r\nimport Landing4 from '../../images/landing_page_images/image4.png';\r\nimport Landing5 from '../../images/landing_page_images/image5.png';\r\n\r\nimport ResultDirect1 from '../../images/result_direct_images/image1.png';\r\nimport ResultDirect2 from '../../images/result_direct_images/image2.png';\r\nimport ResultDirect3 from '../../images/result_direct_images/image3.png';\r\nimport ResultDirect4 from '../../images/result_direct_images/image4.png';\r\nimport ResultDirect5 from '../../images/result_direct_images/image5.png';\r\n\r\nimport ReactPag1 from '../../images/react_pagination_images/image1.png';\r\nimport ReactPag2 from '../../images/react_pagination_images/image2.png';\r\nimport ReactPag3 from '../../images/react_pagination_images/image3.png';\r\nimport ReactPag4 from '../../images/react_pagination_images/image4.png';\r\nimport ReactPag5 from '../../images/react_pagination_images/image5.png';\r\n\r\nlet currSlide = 1;\r\n\r\nconst Portfolio = props => {\r\n    const width = useWindowWidth();\r\n\r\n    const [visibleOne, setVisibleOne] = useState(false);\r\n    const [visibleTwo, setVisibleTwo] = useState(false);\r\n    const [visibleThree, setVisibleThree] = useState(false);\r\n    const [visibleFour, setVisibleFour] = useState(false);\r\n    const [visibleFive, setVisibleFive] = useState(false);\r\n    const [visibleSix, setVisibleSix] = useState(false);\r\n    const [activeSlide, setActiveSlide] = useState(1);\r\n\r\n    let newRef = useRef(null);\r\n\r\n    const [firstIn, setFirstIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const scroller = () => {\r\n            let fromTop = window.scrollY;\r\n\r\n            if(newRef){\r\n                // console.log(newRef.current.offsetTop);\r\n                // console.log(window.innerHeight);\r\n                if(newRef.current.offsetTop - window.innerHeight <= fromTop){\r\n                    setFirstIn(true);\r\n                    // document.getElementById('about').classList.add('slide-in');\r\n                }else{\r\n                    setFirstIn(false);\r\n                }\r\n              \r\n                // console.log(newRef.current.offsetTop);\r\n                // console.log(newRef.current.offsetHeight);\r\n            }\r\n        }\r\n        window.addEventListener('scroll', scroller);\r\n        return () => {\r\n            window.removeEventListener('scroll', scroller);\r\n        }\r\n    })\r\n\r\n\r\n    const changeSlide = useCallback(() => {\r\n        currSlide++;\r\n        let slide = currSlide;\r\n        if(slide > 5){\r\n            slide = 1;\r\n            currSlide = 1;\r\n        }\r\n\r\n        setActiveSlide(slide);\r\n    }, []);\r\n    useEffect(() => {\r\n        setInterval(changeSlide, 5000);\r\n    }, [changeSlide]);\r\n\r\n    return (\r\n        <section className=\"portfolio\" id=\"portfolio\" ref={newRef}>\r\n            <div className=\"portfolio-container wrapper\">\r\n                <h3 className=\"section-title short-underline\" id=\"portfolio-title\">PORTFOLIO</h3>\r\n                <div className=\"portfolio-container__do center-content\">\r\n                    <p id=\"portfolio-sub__title\">Some of the works done in the past are as follows;</p>\r\n                </div>\r\n                <div className=\"portfolio-container-desktop__body\">\r\n                    <div className=\"portfolio-container-body\">\r\n                        <PortfolioItem\r\n                            Image={CBT2}\r\n                            action={setVisibleOne}\r\n                            className={firstIn ? ' show-content' : ''}\r\n                        >\r\n                            <h5>WEB BASED CBT APP</h5>\r\n                            <p>Symfony / React / Redux</p>\r\n                        </PortfolioItem>\r\n\r\n                        <PortfolioItem\r\n                            Image={Result2}\r\n                            action={setVisibleTwo}\r\n                            className={firstIn ? ' show-content' : ''}\r\n                        >\r\n                            <h5>SCHOOL RESULT SOLUTION</h5>\r\n                            <p>Symfony / React</p>\r\n                        </PortfolioItem>\r\n                        \r\n                        <PortfolioItem\r\n                            Image={Fee1}\r\n                            action={setVisibleThree}\r\n                            className={firstIn ? ' show-content' : ''}\r\n                        >\r\n                            <h5>FEES MANAGEMENT SYSTEM</h5>\r\n                            <p>PHP MVC / Javascript</p>\r\n                        </PortfolioItem>\r\n\r\n                        <PortfolioItem\r\n                            Image={ResultDirect1}\r\n                            action={setVisibleFour}\r\n                            className={firstIn ? ' show-content' : ''}\r\n                        >\r\n                            <h5>RESULT DIRECT</h5>\r\n                            <p>HTML / CSS / Javascript</p>\r\n                        </PortfolioItem>\r\n\r\n                        <PortfolioItem\r\n                            Image={Landing1}\r\n                            action={setVisibleFive}\r\n                            className={firstIn ? ' show-content' : ''}\r\n                        >\r\n                            <h5>LANDING PAGE</h5>\r\n                            <p>HTML / CSS / Javascript</p>\r\n                        </PortfolioItem>\r\n\r\n                        <PortfolioItem\r\n                            Image={ReactPag1}\r\n                            action={setVisibleSix}\r\n                            className={firstIn ? ' show-content' : ''}\r\n                        >\r\n                            <h5>REACT JS PAGINATION</h5>\r\n                            <p>React</p>\r\n                        </PortfolioItem>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                visible={visibleOne}\r\n                onCancel={() => setVisibleOne(false)}\r\n                centered={true}\r\n                footer={null}\r\n                width={width > 1024 ? '80%' : width > 767 ? '90%' : width > 360 ? '95%' : '100%'}\r\n                // bodyStyle={{ backgroundColor: !light ? '#161f2e' : 'white', color: !light ? 'white' : 'grey'}}\r\n            >\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-body__content\">\r\n                        <h3 className=\"portfolio-modal-title\">WEB BASED CBT APPLICATION</h3>\r\n                        <p>\r\n                            CBT Application to conduct exams, tests and quizzes in schools, jobs screening, \r\n                            conduct surveys and many more.\r\n                        </p>\r\n                        <p>\r\n                            Features of this application are as follows; The application have different levels of \r\n                            users as explained below;\r\n                        </p>\r\n                        <p>\r\n                            <span className=\"user-type\">Admin </span> is able to create and manage users, user groups, \r\n                            subjects, levels, questions, exams, account types, etc.\r\n                        </p>\r\n                        <p>\r\n                            The <span className=\"user-type\">User </span> is takes exam from list of available exams.\r\n                        </p>\r\n                        <p>\r\n                            CBT app supports six kinds of questions as follows; <span className=\"user-type\">Multiple options - Single answer</span>,\r\n                            <span className=\"user-type\">Multiple options - Multiple answers</span>, <span className=\"user-type\">Short answers</span>, \r\n                            <span className=\"user-type\">Long answer</span>, <span className=\"user-type\">Order Items</span> and <span className=\"user-type\">Match items</span>\r\n                        </p>\r\n                        <div>\r\n                            CBT app also support three kinds of exam types; \r\n                            <ul>\r\n                                <li>Take anytime i.e. exams that can be taken any point in time</li>\r\n                                <li>Take within a time frame i.e. exam that can only be taken within a period of time</li>\r\n                                <li>Take real time i.e. exams that can the taken on a scheduled time only</li>\r\n                            </ul>\r\n                        </div>\r\n                        <p>\r\n                            Exams are taken within a time frame and once the time exceeds, exam is submitted and a result generated showing different information about the exam like;\r\n                            time spent in exam, no of questions answered and unanswered, questions passed and failed, exam score, questions review etc.\r\n                        </p>\r\n                        <div className=\"modal-body__content-stacks\">\r\n                            <Tag color=\"orange\">HTML</Tag>\r\n                            <Tag color=\"orange\">CSS</Tag>\r\n                            <Tag color=\"orange\">Symfony</Tag>\r\n                            <Tag color=\"orange\">React</Tag>\r\n                        </div><br />\r\n                        <div className=\"modal-body__content-buttons\">\r\n                            <a href=\"http://cbt.devugo.com\" className=\"btn\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-eye\"></i> Live Demo</a>\r\n                        </div><br />\r\n                    </div>\r\n                    <div className=\"modal-body__images\">\r\n                        <img className={activeSlide === 1 ? 'active-slide' : ''} src={CBT1} alt=\"cbt app\" />\r\n                        <img className={activeSlide === 2 ? 'active-slide' : ''} src={CBT2} alt=\"cbt app\" />\r\n                        <img className={activeSlide === 3 ? 'active-slide' : ''} src={CBT3} alt=\"cbt app\" />\r\n                        <img className={activeSlide === 4 ? 'active-slide' : ''} src={CBT4} alt=\"cbt app\" />\r\n                        <img className={activeSlide === 5 ? 'active-slide' : ''} src={CBT5} alt=\"cbt app\" />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                visible={visibleTwo}\r\n                onCancel={() => setVisibleTwo(false)}\r\n                centered={true}\r\n                footer={null}\r\n                width={width > 1024 ? '80%' : width > 767 ? '90%' : width > 360 ? '95%' : '100%'}\r\n                // bodyStyle={{ backgroundColor: !light ? '#161f2e' : 'white', color: !light ? 'white' : 'grey'}}\r\n            >\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-body__content\">\r\n                        <h3 className=\"portfolio-modal-title\">SCHOOL RESULT SOLUTION</h3>\r\n                        <p>\r\n                            Result solution to manage results in schools; teachers are able to upload \r\n                            results of students and the students are able to check the result online using designated pins.\r\n                        </p>\r\n                        <p>\r\n                            Features of this application are as follows; The application have different levels of \r\n                            users as explained below;\r\n                        </p>\r\n                        <p>\r\n                            <span className=\"user-type\">Super admin </span> or \r\n                            <span className=\"user-type\"> school owner</span> is able to create and manage pins manually or \r\n                            automatically by specifying the number required to generate. School owner is also able to \r\n                            create and manage classes, arms, sessions, terms and subjects\r\n\r\n                        </p>\r\n                        <p>\r\n                            The <span className=\"user-type\">Admin user </span> is creates and amnages the teachers, the students, subjects, \r\n                            assign teachers to subjects classes etc.\r\n                        </p>\r\n                        <p>\r\n                            The <span className=\"user-type\">Teacher user</span> is only responsible for uplaoding results of students \r\n                            based on the subject classes assigned by the <span className=\"user-type\">admin</span>.\r\n                        </p>\r\n                        <p>\r\n                            The final user is the <span className=\"user-type\">student user</span>. They are able to check their result using \r\n                            a pin generated by the super admin. \r\n                        </p>\r\n                        <div className=\"modal-body__content-stacks\">\r\n                            <Tag color=\"orange\">HTML</Tag>\r\n                            <Tag color=\"orange\">CSS</Tag>\r\n                            <Tag color=\"orange\">Symfony</Tag>\r\n                            <Tag color=\"orange\">React</Tag>\r\n                        </div><br />\r\n                        <div className=\"modal-body__content-buttons\">\r\n                            <a href=\"http://resultsolution.devugo.com/details\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn\"><i className=\"fa fa-eye\"></i> Live Demo</a>\r\n                        </div><br />\r\n                    </div>\r\n                    <div className=\"modal-body__images\">\r\n                        <img className={activeSlide === 1 ? 'active-slide' : ''} src={Result1} alt=\"result solution\" />\r\n                        <img className={activeSlide === 2 ? 'active-slide' : ''} src={Result2} alt=\"result solution\" />\r\n                        <img  className={activeSlide === 3 ? 'active-slide' : ''} src={Result3} alt=\"result solution\" />\r\n                        <img  className={activeSlide === 4 ? 'active-slide' : ''} src={Result4} alt=\"result solution\" />\r\n                        <img  className={activeSlide === 5 ? 'active-slide' : ''} src={Result5} alt=\"result solution\" />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                visible={visibleThree}\r\n                onCancel={() => setVisibleThree(false)}\r\n                centered={true}\r\n                footer={null}\r\n                width={width > 1024 ? '80%' : width > 767 ? '90%' : width > 360 ? '95%' : '100%'}\r\n                // bodyStyle={{ backgroundColor: !light ? '#161f2e' : 'white', color: !light ? 'white' : 'grey'}}\r\n            >\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-body__content\">\r\n                        <h3 className=\"portfolio-modal-title\">FEES MANAGEMENT SYSTEM</h3>\r\n                        <p>\r\n                            Fees management system to manage all expenses and incomes in schools espcially the fees in a school; \r\n                            School admin is able to create fees and messages dispatched to guardians it may concern\r\n                        </p>\r\n                        <p>\r\n                            Features of this application are as follows; The application have different levels of \r\n                            users as explained below;\r\n                        </p>\r\n                        <p>\r\n                            The<span className=\"user-type\"> School admin</span> is able to create and manage students and guardians and \r\n                            also assigning students to their respective guardians. Also creates school structure i.e classes, arm, and terms. \r\n                            The<span className=\"user-type\"> School admin</span> is also able to create different school fees and various expenses i.e \r\n                            fees created are dispatched to guardians it concerns via sms, emails and notification. The <span className=\"user-type\">Admin</span> can also broadcast maessages \r\n                            to guardians also generate report of activities on the portal.\r\n                        </p>\r\n                        <p>\r\n                            The <span className=\"user-type\">Guardian user </span> is able to view students registered in his name and also fees available ( fees yet to be paid ), able to upload proof of fees payment or rather, pay fees online.\r\n                        </p>\r\n                        <div className=\"modal-body__content-stacks\">\r\n                            <Tag color=\"orange\">HTML</Tag>\r\n                            <Tag color=\"orange\">CSS</Tag>\r\n                            <Tag color=\"orange\">PHP MVC</Tag>\r\n                            <Tag color=\"orange\">Javascript</Tag>\r\n                        </div><br />\r\n                        <div className=\"modal-body__content-buttons\">\r\n                            <a href=\"http://fees.devugo.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn\"><i className=\"fa fa-eye\"></i> Live Demo</a>\r\n                        </div><br />\r\n                    </div>\r\n                    <div className=\"modal-body__images\">\r\n                        <img className={activeSlide === 1 ? 'active-slide' : ''} src={Fee1} alt=\"fees management\" />\r\n                        <img className={activeSlide === 2 ? 'active-slide' : ''} src={Fee2} alt=\"fees management\" />\r\n                        <img  className={activeSlide === 3 ? 'active-slide' : ''} src={Fee3} alt=\"fees management\" />\r\n                        <img  className={activeSlide === 4 ? 'active-slide' : ''} src={Fee4} alt=\"fees management\" />\r\n                        <img  className={activeSlide === 5 ? 'active-slide' : ''} src={Fee5} alt=\"fees management\" />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                visible={visibleFour}\r\n                onCancel={() => setVisibleFour(false)}\r\n                centered={true}\r\n                footer={null}\r\n                width={width > 1024 ? '80%' : width > 767 ? '90%' : width > 360 ? '95%' : '100%'}\r\n                className=\"devugo-sample-modal\"\r\n                // bodyStyle={{ backgroundColor: !light ? '#161f2e' : 'white', color: !light ? 'white' : 'grey'}}\r\n            >\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-body__content\">\r\n                        <h3 className=\"portfolio-modal-title\">RESULT DIRECT</h3>\r\n                        <p>\r\n                            Multi schools result solution to manage results in different schools on one platfomr; schools are able to upload \r\n                            results of students and the students are able to check the result online using designated scratch cards.\r\n                        </p>\r\n                        <p>\r\n                            Features of this application are as follows; The application have different levels of \r\n                            users as explained below;\r\n                        </p>\r\n                        <p>\r\n                            <span className=\"user-type\">Super admin </span> is able to create and manage pins manually or \r\n                            automatically. And also, the<span className=\"user-type\"> Super admin</span> is also able to \r\n                            create and manage classes, arms, sessions, terms and subjects\r\n\r\n                        </p>\r\n                        <p>\r\n                            The <span className=\"user-type\">School admin</span> is responsible for uplaoding and managing results of students.\r\n                        </p>\r\n                        <p>\r\n                            The final user is the <span className=\"user-type\">student user</span>. They are able to check their result using scratch cards.\r\n                        </p>\r\n                        <div className=\"modal-body__content-stacks\">\r\n                            <Tag color=\"orange\">HTML</Tag>\r\n                            <Tag color=\"orange\">CSS</Tag>\r\n                            <Tag color=\"orange\">Javascript</Tag>\r\n                            <Tag color=\"orange\">PHP</Tag>\r\n                        </div><br />\r\n                        <div className=\"modal-body__content-buttons\">\r\n                            <a className=\"btn\" rel=\"opener\" href=\"http://resultdirect.org\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-eye\"></i>View Live</a>\r\n                        </div><br />\r\n                    </div>\r\n                    <div className=\"modal-body__images\">\r\n                        <img className={activeSlide === 1 ? 'active-slide' : ''} src={ResultDirect1} alt=\"result direct\" />\r\n                        <img className={activeSlide === 2 ? 'active-slide' : ''} src={ResultDirect2} alt=\"result direct\" />\r\n                        <img  className={activeSlide === 3 ? 'active-slide' : ''} src={ResultDirect3} alt=\"result direct\" />\r\n                        <img  className={activeSlide === 4 ? 'active-slide' : ''} src={ResultDirect4} alt=\"result direct\" />\r\n                        <img  className={activeSlide === 5 ? 'active-slide' : ''} src={ResultDirect5} alt=\"result direct\" />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            \r\n            <Modal\r\n                visible={visibleFive}\r\n                onCancel={() => setVisibleFive(false)}\r\n                centered={true}\r\n                footer={null}\r\n                width={width > 1024 ? '80%' : width > 767 ? '90%' : width > 360 ? '95%' : '100%'}\r\n                // bodyStyle={{ backgroundColor: !light ? '#161f2e' : 'white', color: !light ? 'white' : 'grey'}}\r\n            >\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-body__content\">\r\n                        <h3 className=\"portfolio-modal-title\">LANDING PAGE</h3>\r\n                        <p>\r\n                        A single landing page designed that shows information about a firm and its products.\r\n                        </p>\r\n                        <p>\r\n                            Features of this application are as follows; \r\n                        </p>\r\n                        <p>\r\n                            A home page that shows a brief description of the compnay's works, an about page that \r\n                            shows information about the company, what they do and how they do it, service section \r\n                            that list the various services which the company offers, a projects section; shows a\r\n                            list of various projects the compnay has successfully carried out, a contact section where \r\n                            a potential customer can quickly reach out to them via the contact form. \r\n                        </p>\r\n                        <div className=\"modal-body__content-stacks\">\r\n                            <Tag color=\"orange\">HTML</Tag>\r\n                            <Tag color=\"orange\">CSS</Tag>\r\n                            <Tag color=\"orange\">Javascript</Tag>\r\n                            <Tag color=\"orange\">Bootstrap</Tag>\r\n                        </div><br />\r\n                        <div className=\"modal-body__content-buttons\">\r\n                            <a className=\"btn\" rel=\"opener\" href=\"https://devugo.com\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-eye\"></i> View Live</a>\r\n                        </div><br />\r\n                    </div>\r\n                    <div className=\"modal-body__images\">\r\n                        <img className={activeSlide === 1 ? 'active-slide' : ''} src={Landing1} alt=\"lading page\" />\r\n                        <img className={activeSlide === 2 ? 'active-slide' : ''} src={Landing2} alt=\"lading page\" />\r\n                        <img  className={activeSlide === 3 ? 'active-slide' : ''} src={Landing3} alt=\"lading page\" />\r\n                        <img  className={activeSlide === 4 ? 'active-slide' : ''} src={Landing4} alt=\"lading page\" />\r\n                        <img  className={activeSlide === 5 ? 'active-slide' : ''} src={Landing5} alt=\"lading page\" />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                visible={visibleSix}\r\n                onCancel={() => setVisibleSix(false)}\r\n                centered={true}\r\n                footer={null}\r\n                width={width > 1024 ? '80%' : width > 767 ? '90%' : width > 360 ? '95%' : '100%'}\r\n                // bodyStyle={{ backgroundColor: !light ? '#161f2e' : 'white', color: !light ? 'white' : 'grey'}}\r\n            >\r\n                <div className=\"modal-body\">\r\n                    <div className=\"modal-body__content\">\r\n                        <h3 className=\"portfolio-modal-title\">REACT JS PAGINATION</h3>\r\n                        <p>\r\n                            React Js pagination for react applications\r\n                        </p>\r\n                        <div className=\"modal-body__content-stacks\">\r\n                            <Tag color=\"orange\">React</Tag>\r\n                            <Tag color=\"orange\">HTML</Tag>\r\n                            <Tag color=\"orange\">CSS</Tag>\r\n                        </div><br />\r\n                        <div className=\"modal-body__content-buttons\">\r\n                            <a className=\"btn\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/devugo/reactjs-pagination\"><i className=\"fa fa-code\"></i> View Code</a>\r\n                        </div><br />\r\n                    </div>\r\n                    <div className=\"modal-body__images\">\r\n                        <img className={activeSlide === 1 ? 'active-slide' : ''} src={ReactPag1} alt=\"rweact-pagination\" />\r\n                        <img className={activeSlide === 2 ? 'active-slide' : ''} src={ReactPag2} alt=\"rweact-pagination\" />\r\n                        <img  className={activeSlide === 3 ? 'active-slide' : ''} src={ReactPag3} alt=\"rweact-pagination\" />\r\n                        <img  className={activeSlide === 4 ? 'active-slide' : ''} src={ReactPag4} alt=\"rweact-pagination\" />\r\n                        <img  className={activeSlide === 5 ? 'active-slide' : ''} src={ReactPag5} alt=\"rweact-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Portfolio;","C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\components\\Footer.jsx",[],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\serviceWorker.js",[],["76","77"],"C:\\PROJECTS\\personnal\\devugo-portfolio\\src\\js\\ui-elements\\PortfolioItem.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":30,"column":31,"nodeType":"84","endLine":30,"endColumn":32},{"ruleId":"82","severity":1,"message":"85","line":89,"column":8,"nodeType":"86","endLine":89,"endColumn":20,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":91,"column":5,"nodeType":"89","endLine":91,"endColumn":14,"suggestions":"90"},{"ruleId":"78","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":373,"column":108,"nodeType":"95","endLine":373,"endColumn":133},{"ruleId":"93","severity":1,"message":"94","line":417,"column":103,"nodeType":"95","endLine":417,"endColumn":128},{"ruleId":"78","replacedBy":"96"},{"ruleId":"80","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","Assignments to the 'ryb' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Literal","React Hook useEffect has a missing dependency: 'typeWriter'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect contains a call to 'setSLideIn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["101"],["98"],["99"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["98"],["99"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [controller, typeWriter]",{"range":"106","text":"107"},"Add dependencies array: []",{"range":"108","text":"109"},[2921,2933],"[controller, typeWriter]",[3110,3110],", []"]